<UserControl x:Class="RampantSlug.PinballClient.ClientDisplays.DeviceTree.DeviceTreeView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:DeviceTree="clr-namespace:RampantSlug.PinballClient.ClientDisplays.DeviceTree"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:converters="clr-namespace:RampantSlug.Common.Converters;assembly=RampantSlug.Common"
        xmlns:commonViewModels="clr-namespace:RampantSlug.PinballClient.CommonViewModels">
    <UserControl.Resources>
        <converters:BooleanConditionConverter x:Key="BooleanConditionConverter" />
        <converters:ConditionalValue x:Key="StateActiveConditionalValue" ConditionTrueValue="LawnGreen" ConditionFalseValue="Transparent" />
        <Style x:Key="VisibilityIcon" TargetType="{x:Type Rectangle}">
            <!-- Default (when Visibility = True) -->
            <Style.Triggers>
                <DataTrigger 
                    Binding="{Binding Path=IsVisible}" Value="True">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <TextBlock Text="Hide"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_eye}" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <!-- When Visibility = False -->
                <DataTrigger Binding="{Binding Path=IsVisible}" Value="False">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <TextBlock Text="Show"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="OpacityMask">
                        <Setter.Value>
                            <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_moon_new}" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FlatButton" TargetType="Button">
            <Setter Property="Control.Background" Value="{x:Null}" />
            <Setter Property="Control.BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            >
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Control.FontWeight" Value="Bold" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="{DynamicResource AccentColorBrush}" />
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
        
    <TreeView 
        Background="Transparent"
        BorderThickness="0"
        ItemsSource="{Binding FirstGeneration}">
        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Style.Triggers>            
                    <Trigger Property="IsSelected" Value="True">
                           <!-- <Setter Property="FontWeight" Value="Bold" />-->                   
                    </Trigger>                    
                </Style.Triggers>                
            </Style>          
        </TreeView.ItemContainerStyle>
  
        <TreeView.Resources>
            
            <!-- Template for parent types - Categories -->
            <HierarchicalDataTemplate                     
                DataType="{x:Type DeviceTree:DeviceTypeViewModel}" 
                ItemsSource="{Binding Children}"
                >               
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="159" />
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Grid.Column="0"
                        Text="{Binding DeviceTypeName}" 
                        FontSize="14"
                        />
                    <Button 
                        Grid.Column="2"
                        Width="20"
                        Height="20"
                        cal:Message.Attach="ChangeVisibility()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"                      
                        >
                        <Rectangle 
                            Width="12"
                            Height="8"
                            Style="{StaticResource VisibilityIcon}"   
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Button>                    
                    <Grid.ContextMenu >
                            <ContextMenu>
                                <MenuItem 
                                    FontWeight="Bold" 
                                    Header="Add New Device" 
                                    cal:Message.Attach="AddDevice()"                                   
                                    />
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>               
            </HierarchicalDataTemplate>
            
           <!-- Template for Switches -->                        
            <DataTemplate                 
                DataType="{x:Type commonViewModels:SwitchViewModel}">                
                <Grid 
                    Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                    >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140" />
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Grid.Column="0"
                        Text="{Binding Name}" />
                    <Button
                        Grid.Column="1" 
                        Height="20"
                        BorderThickness="1"
                        Style="{StaticResource FlatButton}"
                        Content="{Binding State}"
                        cal:Message.Attach="ActivateDeviceState()"
                        VerticalContentAlignment="Top"
                        FontSize="14"
                        Margin="10,0,10,0"
                        Background="{Binding IsDeviceActive, Converter={StaticResource BooleanConditionConverter}, ConverterParameter={StaticResource StateActiveConditionalValue}}"
                        ToolTip="Activate Switch"
                        />
                    <Button 
                        Grid.Column="2"
                        Width="20"
                        Height="20"
                        cal:Message.Attach="ChangeVisibility()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=2}, Path=DataContext.IsVisible}"
                        >
                        <Rectangle 
                            Width="12"
                            Height="8"
                            Style="{StaticResource VisibilityIcon}"   
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Button>
                    <Grid.ContextMenu >
                            <ContextMenu>
                                <MenuItem 
                                    FontWeight="Bold" 
                                    Header="Configure Switch" 
                                    cal:Message.Attach="ConfigureDevice()" 
                                    />
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>

            <!-- Template for Coils -->
            <DataTemplate 
                DataType="{x:Type commonViewModels:CoilViewModel}">
                <Grid                         
                    Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                    >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140" />
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Grid.Column="0"
                        Text="{Binding Name}" />
                    <Button
                            Grid.Column="1"
                            Height="20"
                            BorderThickness="1"
                            Style="{StaticResource FlatButton}"
                            Content="Pulse"
                            cal:Message.Attach="ActivateDeviceState()"
                            VerticalContentAlignment="Top"
                            FontSize="14"
                            Margin="10,0,10,0"
                            Background="{Binding IsDeviceActive, Converter={StaticResource BooleanConditionConverter}, ConverterParameter={StaticResource StateActiveConditionalValue}}"
                        ToolTip="Activate Coil"
                            />
                    <Button 
                        Grid.Column="2"
                        Width="20"
                        Height="20"
                        cal:Message.Attach="ChangeVisibility()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=2}, Path=DataContext.IsVisible}"
                        >
                        <Rectangle 
                            Width="12"
                            Height="8"
                            Style="{StaticResource VisibilityIcon}"   
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Button>

                    <Grid.ContextMenu >
                        <ContextMenu>
                            <MenuItem 
                                    FontWeight="Bold" 
                                    Header="Configure Coil" 
                                    cal:Message.Attach="ConfigureDevice()"
                                    
                                    />
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
            </DataTemplate>

            <!-- Template for Stepper Motors -->
            <DataTemplate 
                DataType="{x:Type commonViewModels:StepperMotorViewModel}">
                <Grid 
                        Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                        >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Grid.Column="0"
                            Text="{Binding Name}" />
                    <Button 
                        Grid.Column="1"
                        Width="20"
                        Height="20"
                        Margin="12,0,0,0"
                        cal:Message.Attach="RotateClockwise()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Rotate Clockwise"
                        >
                        <Rectangle 
                            Width="12"
                            Height="12"
                            >
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_transform_rotate_clockwise}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button 
                        Grid.Column="2"
                        Width="20"
                        Height="20"
                        Margin="0,0,12,0"
                        cal:Message.Attach="RotateCounterClockwise()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Rotate Counter Clockwise"
                        >
                        <Rectangle 
                            Width="12"
                            Height="12"
                            >
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_transform_rotate_counterclockwise}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button 
                        Grid.Column="3"
                        Width="20"
                        Height="20"
                        cal:Message.Attach="ChangeVisibility()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=2}, Path=DataContext.IsVisible}"
                        >
                        <Rectangle 
                            Width="12"
                            Height="8"
                            Style="{StaticResource VisibilityIcon}"   
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Button>

                    <Grid.ContextMenu >
                        <ContextMenu>
                            <MenuItem 
                                    FontWeight="Bold" 
                                    Header="Configure Stepper Motor" 
                                    cal:Message.Attach="ConfigureDevice()"
                                    
                                    />
                            <MenuItem 
                                    Header="Rotate Right" 
                                    cal:Message.Attach="RotateRight()"                                 
                                    />
                            <MenuItem 
                                    Header="Rotate Left" 
                                    cal:Message.Attach="RotateLeft()"                                 
                                    />
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
            </DataTemplate>

            <!-- Template for Servos -->
            <DataTemplate 
                DataType="{x:Type commonViewModels:ServoViewModel}">
                <Grid 
                        Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                        >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Grid.Column="0"
                            Text="{Binding Name}" />
                    <Button 
                        Grid.Column="1"
                        Width="20"
                        Height="20"
                        Margin="12,0,0,0"
                        cal:Message.Attach="RotateClockwise()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Rotate Clockwise"
                        >
                        <Rectangle 
                            Width="12"
                            Height="12"
                            >   
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_transform_rotate_clockwise}" />
                            </Rectangle.Fill> 
                        </Rectangle>
                    </Button>
                    <Button 
                        Grid.Column="2"
                        Width="20"
                        Height="20"
                        Margin="0,0,12,0"
                        cal:Message.Attach="RotateCounterClockwise()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Rotate Counter Clockwise"
                        >
                        <Rectangle 
                            Width="12"
                            Height="12"
                            >
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_transform_rotate_counterclockwise}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button 
                        Grid.Column="3"
                        Width="20"
                        Height="20"
                        cal:Message.Attach="ChangeVisibility()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=2}, Path=DataContext.IsVisible}"
                        >
                        <Rectangle 
                            Width="12"
                            Height="8"
                            Style="{StaticResource VisibilityIcon}"   
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Button>

                    <Grid.ContextMenu >
                        <ContextMenu>
                            <MenuItem 
                                    FontWeight="Bold" 
                                    Header="Configure Servo" 
                                    cal:Message.Attach="ConfigureDevice()"
                                    
                                    />
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
            </DataTemplate>
           
            <!-- Template for DC Motors -->
            <DataTemplate DataType="{x:Type commonViewModels:DCMotorViewModel}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" />
                </StackPanel>
            </DataTemplate>

            <!-- Template for Leds -->
            <DataTemplate 
                DataType="{x:Type commonViewModels:LedViewModel}">
                <Grid 
                        Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"
                        >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="35" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Grid.Column="0"
                            Text="{Binding Name}" />
                    <Button 
                        Grid.Column="1"
                        Width="20"
                        Height="20"
                        Margin="12,0,0,0"
                        cal:Message.Attach="DeactivateLed()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Deactivate Led"
                        >
                        <Rectangle 
                            Margin="0,2,0,0"
                            
                            Width="8"
                            Height="10"
                            >
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_lightbulb_hue}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button 
                        Grid.Column="2"
                        Width="20"
                        Height="20"
                        Margin="0,0,12,0"
                        cal:Message.Attach="ActivateLed()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Activate Led"
                        >
                        <Rectangle 
                            Width="12"
                            Height="12"
                            >
                            <Rectangle.Fill>
                                <VisualBrush Visual="{StaticResource appbar_lightbulb_hue_on}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button 
                        Grid.Column="3"
                        Width="20"
                        Height="20"
                        cal:Message.Attach="ChangeVisibility()"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=2}, Path=DataContext.IsVisible}"
                        >
                        <Rectangle 
                            Width="12"
                            Height="8"
                            Style="{StaticResource VisibilityIcon}"   
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Button>

                    <Grid.ContextMenu >
                        <ContextMenu>
                            <MenuItem 
                                    FontWeight="Bold" 
                                    Header="Configure Led" 
                                    cal:Message.Attach="ConfigureDevice()"
                                    
                                    />
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
            </DataTemplate>

        </TreeView.Resources>

        </TreeView>
</UserControl>